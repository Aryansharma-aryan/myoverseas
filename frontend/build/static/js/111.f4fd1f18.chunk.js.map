{"version":3,"file":"static/js/111.f4fd1f18.chunk.js","mappings":"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","sources":["components/Layout.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport {\r\n  FaFacebookF,\r\n  FaTwitter,\r\n  FaInstagram,\r\n  FaLinkedinIn,\r\n  FaBars,\r\n  FaTimes,\r\n} from \"react-icons/fa\";\r\nimport logo from \"../assets/vertexlogo.png\";\r\n\r\nconst Layout = () => {\r\n  const location = useLocation();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\r\n  const toggleSidebar = () => setSidebarOpen(!isSidebarOpen);\r\n  const isHome = location.pathname === \"/\";\r\n\r\n  return (\r\n    <div className=\"font-sans text-white bg-[#0a1f3c] min-h-screen\">\r\n      {/* Top Contact Bar */}\r\n      <div\r\n        className={`flex flex-wrap items-center justify-between px-4 py-2 border-b border-gray-700 text-[15px] md:text-base ${\r\n          isHome ? \"bg-transparent\" : \"bg-[#0a1f3c]\"\r\n        }`}\r\n      >\r\n        <div className=\"flex gap-6 flex-wrap font-medium tracking-wide text-white\">\r\n  <span>\r\n    <strong className=\"text-orange-500\">ðŸ“ž Phone:</strong>{\" \"}\r\n    <a\r\n      href=\"tel:+918053555546\"\r\n      className=\"text-yellow-300 font-bold hover:text-white shadow-[0_0_8px_rgba(255,193,7,0.7)] transition duration-200\"\r\n    >\r\n      8053555546\r\n    </a>\r\n    <span className=\"mx-2 text-orange-400 font-bold\">|</span>\r\n    <a\r\n      href=\"tel:+919996140555\"\r\n      className=\"text-yellow-300 font-bold hover:text-white shadow-[0_0_8px_rgba(255,193,7,0.7)] transition duration-200\"\r\n    >\r\n      9996140555\r\n    </a>\r\n  </span>\r\n\r\n  <span>\r\n    <strong className=\"text-orange-500\">ðŸ“§ Email:</strong>{\" \"}\r\n    <a\r\n      href=\"mailto:vertexstudyvisa@gmail.com\"\r\n      className=\"text-yellow-300 font-bold hover:text-white shadow-[0_0_8px_rgba(255,193,7,0.7)] transition duration-200\"\r\n    >\r\n      vertexstudyvisa@gmail.com\r\n    </a>\r\n  </span>\r\n</div>\r\n\r\n        <div className=\"flex gap-3 text-xl\">\r\n          {[FaFacebookF, FaTwitter, FaInstagram, FaLinkedinIn].map(\r\n            (Icon, index) => (\r\n              <motion.div\r\n                key={index}\r\n                whileHover={{ scale: 1.25 }}\r\n                whileTap={{ scale: 0.95 }}\r\n                className=\"p-1.5 rounded-full bg-white/10 backdrop-blur-sm text-orange-400 shadow-[0_0_10px_rgba(255,90,0,0.4)] transition\"\r\n              >\r\n                <Icon className=\"cursor-pointer\" />\r\n              </motion.div>\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navbar */}\r\n      <motion.header\r\n        initial={{ y: -50, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        transition={{ type: \"spring\", stiffness: 80, duration: 0.6 }}\r\n        className={`flex items-center justify-between px-4 py-2 ${\r\n          isHome ? \"bg-transparent absolute w-full top-0 z-30\" : \"bg-[#0a1f3c]\"\r\n        }`}\r\n      >\r\n        <motion.img\r\n          src={logo}\r\n          alt=\"Vertex Logo\"\r\n          className=\"w-16 sm:w-20 md:w-24 object-contain\"\r\n          whileHover={{ scale: 1.1 }}\r\n        />\r\n\r\n<motion.nav className=\"hidden md:flex gap-6 text-lg font-semibold tracking-wide\">\r\n          {[\"/\", \"/services\", \"/test-preparation\", \"/about\", \"/contact\", \"/Faq\", \"/team\"].map(\r\n            (path, i) => (\r\n              <Link\r\n                key={i}\r\n                to={path}\r\n                className=\"hover:text-orange-400 transition\"\r\n              >\r\n                {path === \"/\"\r\n                  ? \"Home\"\r\n                  : path === \"/Faq\"\r\n                  ? \"FAQ\"\r\n                  : path\r\n                      .slice(1)\r\n                      .replace(\"-\", \" \")\r\n                      .replace(/\\b\\w/g, (c) => c.toUpperCase())}\r\n              </Link>\r\n            )\r\n          )}\r\n        </motion.nav>\r\n\r\n        <motion.div className=\"hidden md:block\">\r\n          <Link to=\"/quote\">\r\n            <button className=\"bg-orange-500 text-white font-semibold px-5 py-2 rounded-md hover:bg-orange-600 text-xs shadow-md shadow-orange-500/40 transition duration-200\">\r\n              GET A QUOTE\r\n            </button>\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* Mobile menu button */}\r\n        <div\r\n          className=\"md:hidden text-xl text-orange-400 cursor-pointer\"\r\n          onClick={toggleSidebar}\r\n        >\r\n          <FaBars />\r\n        </div>\r\n      </motion.header>\r\n\r\n      {/* Sidebar for mobile */}\r\n      <AnimatePresence>\r\n        {isSidebarOpen && (\r\n          <motion.aside\r\n            initial={{ x: \"100%\", opacity: 0 }}\r\n            animate={{ x: 0, opacity: 1 }}\r\n            exit={{ x: \"100%\", opacity: 0 }}\r\n            transition={{ type: \"tween\", duration: 0.3 }}\r\n            className=\"fixed top-0 right-0 w-60 h-full bg-[#0a1f3c] z-50 shadow-lg flex flex-col p-5 gap-4\"\r\n          >\r\n            <div className=\"flex justify-between items-center mb-3\">\r\n              <img src={logo} alt=\"logo\" className=\"w-10 h-10\" />\r\n              <FaTimes\r\n                onClick={toggleSidebar}\r\n                className=\"text-white text-xl cursor-pointer\"\r\n              />\r\n            </div>\r\n            {[\"/\", \"/services\", \"/test-preparation\", \"/about\", \"/contact\", \"/Faq\", \"/team\"].map(\r\n              (path, i) => (\r\n                <Link key={i} to={path} onClick={toggleSidebar}>\r\n                  {path === \"/\"\r\n                    ? \"Home\"\r\n                    : path.slice(1).replace(\"-\", \" \").replace(/\\b\\w/g, (c) => c.toUpperCase())}\r\n                </Link>\r\n              )\r\n            )}\r\n            <Link to=\"/quote\" onClick={toggleSidebar}>\r\n              <button className=\"mt-2 bg-orange-500 text-white px-4 py-1.5 rounded hover:bg-orange-600 font-semibold text-sm shadow-md shadow-orange-500/40\">\r\n                Get A Quote\r\n              </button>\r\n            </Link>\r\n          </motion.aside>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Page Content */}\r\n      <main className=\"pt-16\">\r\n        <Outlet />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            parent.removeChild(style);\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n"],"names":["Layout","location","useLocation","isSidebarOpen","setSidebarOpen","useState","toggleSidebar","isHome","pathname","_jsxs","className","children","_jsx","href","FaFacebookF","FaTwitter","FaInstagram","FaLinkedinIn","map","Icon","index","motion","div","whileHover","scale","whileTap","header","initial","y","opacity","animate","transition","type","stiffness","duration","img","src","logo","alt","nav","path","i","Link","to","slice","replace","c","toUpperCase","onClick","FaBars","AnimatePresence","aside","x","exit","FaTimes","Outlet","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","PopChild","_ref","anchorX","root","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","contains","jsx","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete"],"sourceRoot":""}